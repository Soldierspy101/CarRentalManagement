@page "/colors/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]
@using CarRentalManagementPE_01.Client.Shared

<h3 class="car-title">Car Colors</h3>

<a href="/colors/create/" class="btn btn-secondary">
    <span class="oi oi-plus"></span>
    Create New Color
</a>
<br />
@if(Colors== null)
{
    <div class="alert art-info">Loading Colors...</div>
}
else
{
    <table class="table table-responsive">
        <thead>
            <tr>
                <th>Name</th>
                <th>Actions</th>
            </tr>
        </thead>
    
    <tbody>
        @foreach (var color in Colors)
        {
            <tr>
                <td>@color?.Name</td>
                <td>
                    @if (color != null)
                    {
                        <a href="/colors/view/@color.Id" class="btn btn-primary">
                            <span class="oi oi-book"></span>
                        </a>
                        <a href="/colors/edit/@color.Id" class="btn btn-warning">
                            <span class="oi oi-pencil"></span>
                        </a>
                        <button class="btn btn-danger" @onclick="@(()=>Delete(color.Id))">
                            <span class="oi oi-delete"></span>
                        </button>
                    }
                </td>
            </tr>
        }

    </tbody>
</table>
}
@code {
    private List<Colors> Colors;

    protected async override Task OnInitializedAsync()
    {
        Colors = await _client.GetFromJsonAsync<List<Colors>>($"{Endpoints.ColoursEndpoint}");
    }
    async Task Delete(int colorId)
    {
        if (Colors != null)
        {
            var color = Colors.First(q => q.Id == colorId);
            var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {color.Name}?");
            if(confirm)
            {
                await _client.DeleteAsync($"{Endpoints.ColoursEndpoint}/{colorId}");
                
                await OnInitializedAsync();
            }
        }
    }

}